# See https://aka.ms/yaml
# This pipeline to be run on PRs

trigger: none
pr:
  branches:
    include:
    - master
    - v*.*.x
  paths:
    exclude:
    - .gitignore
    - .readthedocs.yaml
    - contrib/pr_merge_check.py
    - docs/source
    - docs/CodeStyle.md
    - docs/LoggingStyle.md
    - docs/OptimizationStyle.md
    - README.md
    - NEWS
    - AUTHORS

resources:
  repositories:
  - repository: UCX # The name used to reference this repository in the checkout step
    type: github
    name: openucx/ucx


stages:
  - stage: Test
    jobs:
      - job: UCX
        workspace:
          clean: all
        pool:
          name: MLNX
          demands:
          - ucx_bf -equals yes
        steps:
          - checkout: UCX

          - bash: |
              set -eE
              ls
              ./autogen.sh
              mkdir -p ucx_build_dir
              cd ucx_build_dir
              ${WORKSPACE}/configure $(CONFIGURE_OPTS) --prefix=$(Build.Repository.LocalPath)/install
              gcc -v
              make -s -j `nproc`
              make install
            displayName: Build ucx artifact
          - task: CopyFiles@2
            inputs:
              sourceFolder: '$(Build.Repository.LocalPath)'
              contents: |
                install/**
              targetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: ucx_bin_$(Build.BuildId)

      - job: UCC
        workspace:
          clean: all
        pool:
          name: MLNX
          demands:
          - ucx_bf -equals yes
        steps:
          - checkout: self
          - task: DownloadBuildArtifacts@0
            displayName: 'Download UCX Artifacts'
            inputs:
              artifactName: ucx_bin_$(Build.BuildId)
              downloadPath: $(System.DefaultWorkingDirectory)
          - bash: chmod u+rwx $(System.DefaultWorkingDirectory)/ucx_bin_$(Build.BuildId) -R
          - bash: |
              ./autogen.sh
              mkdir -p build
              cd build
              ../configure --with-ucx="$(System.DefaultWorkingDirectory)/ucx_bin_$(Build.BuildId)/install" --enable-gtest
              make -j install
          -bash: make gtest
