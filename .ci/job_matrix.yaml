---
job: 'ucc'

registry_host: 'harbor.mellanox.com'
registry_path: '/torch-ucc'
registry_auth: '05d98651-e11c-4a57-9cc6-52df79014b89'

volumes:
  - { mountPath: '/hpc/local', hostPath: '/hpc/local' }
  - { mountPath: '/auto/sw_tools', hostPath: '/auto/sw_tools' }
  - { mountPath: '/.autodirect/mtrswgwork', hostPath: '/.autodirect/mtrswgwork' }
  - { mountPath: '/.autodirect/sw/release', hostPath: '/.autodirect/sw/release' }

env:
  CUDA_VER: '11.2.1'
  UCC_URI_SUFFIX: 'ucc/${UCC_VERSION}/x86_64/centos8/cuda${CUDA_VER}'
  UCC_DOCKER_IMAGE_NAME: '${registry_host}${registry_path}/${UCC_URI_SUFFIX}'
  NVIDIA_ROOT_DIR: '/opt/nvidia'
  SRC_DIR: '${NVIDIA_ROOT_DIR}/src'
  BIN_DIR: '${NVIDIA_ROOT_DIR}/bin'

docker_opt: '--pull always --network=host --uts=host --ipc=host --ulimit stack=67108864 --ulimit memlock=-1 --security-opt seccomp=unconfined --cap-add=SYS_ADMIN --device=/dev/infiniband/ --gpus all --user root'

runs_on_dockers:
  - {
    file: '.ci/Dockerfile.centos8',
    name: 'centos8',
    tag: '${BUILD_NUMBER}',
    arch: 'x86_64',
    uri: '${UCC_URI_SUFFIX}',
    build_args: '--rm --no-cache --build-arg CUDA_VER=${CUDA_VER} --build-arg NVIDIA_ROOT_DIR=${NVIDIA_ROOT_DIR}',
    cloud: 'swx-k8s',
    nodeLabel: 'dockerserver && swx-clx01',
  }
  - {
    file: '.ci/Dockerfile.fedora33',
    name: 'fedora33',
    tag: 'latest',
    arch: 'x86_64',
    uri: 'x86_64/fedora33',
    build_args: '--rm --no-cache',
    cloud: 'swx-k8s',
  }

# bare metal
runs_on_agents:
  - nodeLabel: 'swx-clx01'

timeout_minutes: 120

steps:
  #============================================================================
  - name: Check Code Format
    containerSelector: "{name:'fedora33'}"
    run: |
      echo "INFO: check code format"
      ${SRC_DIR}/ucc/.ci/scripts/check_code_format.sh
  #============================================================================
  - name: Run UCC tests
    containerSelector: "{name:'centos8'}"
    run: |
      echo "INFO: Run UCC tests"
      hostname
      ${SRC_DIR}/ucc/.ci/scripts/run_tests_ucc.sh
  #============================================================================
  - name: Run Torch-UCC tests (UCC)
    containerSelector: "{name:'centos8'}"
    run: |
      echo "INFO: Run Torch-UCC tests (UCC)"
      hostname
      ${SRC_DIR}/ucc/.ci/scripts/run_tests_torch_ucc.sh
  #============================================================================
  - name: Run docker containers
    agentSelector: "{nodeLabel: 'swx-clx01'}"
    run: |
      echo "INFO: Run docker containers"
      ${WORKSPACE}/.ci/scripts/run_docker.sh
  #============================================================================
  - name: Run UCC MPI tests
    agentSelector: "{nodeLabel: 'swx-clx01'}"
    run: |
      echo "INFO: Run UCC MPI tests"
      ${WORKSPACE}/.ci/scripts/run_tests_ucc_mpi_docker.sh
  #============================================================================
  - name: Run DLRM tests (UCC/GPU)
    agentSelector: "{nodeLabel: 'swx-clx01'}"
    run: |
      echo "INFO: Run DLRM tests (UCC/GPU)"
      ${WORKSPACE}/.ci/scripts/run_dlrm_docker.sh
  #============================================================================
  - name: Stop docker containers
    agentSelector: "{nodeLabel: 'swx-clx01'}"
    run: |
      echo "INFO: Stop docker containers"
      ${WORKSPACE}/.ci/scripts/stop_docker.sh
  #============================================================================
